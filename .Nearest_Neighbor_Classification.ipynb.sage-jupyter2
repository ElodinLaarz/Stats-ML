{"backend_state":"running","kernel":"python3","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":62963712},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.7.4"}},"type":"settings"}
{"cell_type":"code","exec_count":15,"id":"58fe5e","input":"#Problem 2","pos":14,"type":"cell"}
{"cell_type":"code","exec_count":16,"id":"fe409f","input":"import numpy as np\nimport seaborn as sns\nimport pandas as pd\nfrom matplotlib import pyplot as plt\n%matplotlib inline\nfrom sklearn.preprocessing import StandardScaler\nsns.set(rc={'axes.facecolor':sns.xkcd_rgb[\"gunmetal\"]})\n\nmy_cmap = sns.cubehelix_palette(8, start=.5, rot=-.75, as_cmap=True)\n# sns.palplot(sns.diverging_palette(250, 5, n=15))\n\nX1 = np.random.normal(0, 2,size=(25, 50))\nX2 = np.random.normal(1, 2, size=(25, 50))\nX3 = np.random.normal(2, 2, size=(25, 50))\ny = np.repeat([1, 2, 3], 75)\nX = np.concatenate((X1, X2, X3))","pos":15,"type":"cell"}
{"cell_type":"code","exec_count":17,"id":"a223c1","input":"from sklearn.decomposition import PCA\npca = PCA(n_components=2)\nX_std = StandardScaler().fit_transform(X)\npca.fit(X_std)\n# print(pca.components_)\nX_pca = pca.transform(X_std)\ndf = pd.DataFrame({'p1':X_pca[:,0],'p2':X_pca[:,1]})\ny = np.concatenate((np.repeat([1],25),np.repeat([2],25),np.repeat([3],25)))\ndf['labels'] = pd.Series(y)","pos":16,"type":"cell"}
{"cell_type":"code","exec_count":18,"id":"2d1e00","input":"plt.scatter(x=df['p1'],y=df['p2'],c=y,cmap=my_cmap)","output":{"0":{"data":{"text/plain":"<matplotlib.collections.PathCollection at 0x28beb5bb988>"},"exec_count":18,"output_type":"execute_result"},"1":{"data":{"image/png":"565ac3cfd79d4614a73c9fba35b53653b89c11fe","text/plain":"<Figure size 432x288 with 1 Axes>"},"output_type":"display_data"}},"pos":17,"type":"cell"}
{"cell_type":"code","exec_count":19,"id":"427ace","input":"from sklearn.cluster import KMeans\nkmeans = KMeans(n_clusters=3)\nkmeans.fit(X_pca)\n\nnew_y = kmeans.predict(X_pca)\nplt.scatter(x=df['p1'],y=df['p2'],c=new_y,cmap=my_cmap)","output":{"0":{"data":{"text/plain":"<matplotlib.collections.PathCollection at 0x28beb82bf48>"},"exec_count":19,"output_type":"execute_result"},"1":{"data":{"image/png":"38afdf1a1e13dbad8fb41662730c7f5802a6be29","text/plain":"<Figure size 432x288 with 1 Axes>"},"output_type":"display_data"}},"pos":18,"type":"cell"}
{"cell_type":"code","exec_count":20,"id":"1c2b58","input":"from sklearn.cluster import KMeans\nkmeans = KMeans(n_clusters=2)\nkmeans.fit(X_pca)\n\nnew_y = kmeans.predict(X_pca)\nplt.scatter(x=df['p1'],y=df['p2'],c=new_y,cmap=my_cmap)","output":{"0":{"data":{"text/plain":"<matplotlib.collections.PathCollection at 0x28beb894ec8>"},"exec_count":20,"output_type":"execute_result"},"1":{"data":{"image/png":"f910ab89ceb1d9dcc98185a41329163aab7cee52","text/plain":"<Figure size 432x288 with 1 Axes>"},"output_type":"display_data"}},"pos":19,"type":"cell"}
{"cell_type":"code","exec_count":21,"id":"43d910","input":"from sklearn.cluster import KMeans\nkmeans = KMeans(n_clusters=4)\nkmeans.fit(X_pca)\n\nnew_y = kmeans.predict(X_pca)\nplt.scatter(x=df['p1'],y=df['p2'],c=new_y,cmap=my_cmap)","output":{"0":{"data":{"text/plain":"<matplotlib.collections.PathCollection at 0x28beb900f48>"},"exec_count":21,"output_type":"execute_result"},"1":{"data":{"image/png":"c6b4a0fc5add85367eb3bc745c1f72d3c1d9e7cf","text/plain":"<Figure size 432x288 with 1 Axes>"},"output_type":"display_data"}},"pos":20,"type":"cell"}
{"cell_type":"code","exec_count":22,"id":"252300","input":"#Problem 3","pos":21,"type":"cell"}
{"cell_type":"code","exec_count":23,"id":"a87b53","input":"import numpy as np\nimport math\nimport pandas as pd\nfrom matplotlib import pyplot as plt\nimport seaborn as sns\nfrom sklearn.preprocessing import StandardScaler\nsns.set()\n\nmy_cmap = sns.cubehelix_palette(8, start=.5, rot=-.75, as_cmap=True)","pos":22,"type":"cell"}
{"cell_type":"code","exec_count":24,"id":"233393","input":"X1 = []\nfor i in range(30):\n    #t1 in (-pi/8,pi/8), p1 in (0,2pi)\n    t1 = np.random.random_sample()*math.pi/4.0 - math.pi/8\n    p1 = np.random.random_sample()*math.pi*2\n    x1 = math.sin(t1)*math.cos(p1) + np.random.normal(scale=0.5)\n    y1 = math.sin(t1)*math.sin(p1) + np.random.normal(scale=0.5)\n    z1 = math.cos(t1) + np.random.normal(scale=0.5)\n    X1.append([t1,p1,x1,y1,z1])\n\nX2 = []\nfor i in range(30):\n    #t2 in (pi/4,3pi/4), p2 in (-pi/4,pi/4)\n    t2 = np.random.random_sample()*math.pi/2.0 + math.pi/4\n    p2 = np.random.random_sample()*math.pi/2.0 - math.pi/4\n    x2 = math.sin(t2)*math.cos(p2) + np.random.normal(scale=0.5)\n    y2 = math.sin(t2)*math.sin(p2) + np.random.normal(scale=0.5)\n    z2 = math.cos(t2) + np.random.normal(scale=0.5)\n    X2.append([t2,p2,x2,y2,z2])\n\nX3 = []\nfor i in range(30):\n    #t3 in (pi/4,3pi/4), p3 in (pi/4,3pi/4)\n    t3 = np.random.random_sample()*math.pi/2.0 + math.pi/4\n    p3 = np.random.random_sample()*math.pi/2.0 + math.pi/4\n    x3 = math.sin(t3)*math.cos(p3) + np.random.normal(scale=0.5)\n    y3 = math.sin(t3)*math.sin(p3) + np.random.normal(scale=0.5)\n    z3 = math.cos(t3) + np.random.normal(scale=0.5)\n    X3.append([t3,p3,x3,y3,z3])\n\ny = np.repeat([1,2,3],30)\nX = X1+X2+X3","pos":23,"type":"cell"}
{"cell_type":"code","exec_count":25,"id":"da8674","input":"from sklearn.cluster import KMeans\n\ninerts = []\nfor i in range(20):\n    kmean = KMeans(n_clusters=i+1)\n    kmean.fit(X)\n\n    labels = kmean.predict(X)\n    inerts.append([i+1,kmean.inertia_])\n# plt.scatter(x=np.array(inerts)[:,0],y=np.array(inerts)[:,1])\nplt.plot(np.array(inerts)[:,1])","output":{"0":{"data":{"text/plain":"[<matplotlib.lines.Line2D at 0x28beb972248>]"},"exec_count":25,"output_type":"execute_result"},"1":{"data":{"image/png":"87295414fae4098b175e192fb9c6d974b8058226","text/plain":"<Figure size 432x288 with 1 Axes>"},"output_type":"display_data"}},"pos":24,"type":"cell"}
{"cell_type":"code","exec_count":26,"id":"422603","input":"from mpl_toolkits import mplot3d\n\nax = plt.axes(projection='3d')\n\nax.view_init(45, 70)\n\nxdata = np.array(X)[:,2]\nydata = np.array(X)[:,3]\nzdata = np.array(X)[:,4]\nax.scatter3D(xdata, ydata, zdata, c=y, cmap=my_cmap)","output":{"0":{"data":{"text/plain":"<mpl_toolkits.mplot3d.art3d.Path3DCollection at 0x28beba37808>"},"exec_count":26,"output_type":"execute_result"},"1":{"data":{"image/png":"0b96e9d80f5b1d6f7c4066b8adde9648b50b21af","text/plain":"<Figure size 432x288 with 1 Axes>"},"output_type":"display_data"}},"pos":25,"type":"cell"}
{"cell_type":"code","exec_count":27,"id":"46dc08","input":"kmean = KMeans(n_clusters=3)\nkmean.fit(X)\n\nlabels = kmean.predict(X)\ninerts.append([3,kmean.inertia_])\n\n\nax = plt.axes(projection='3d')\n\nax.view_init(45, 70)\n\nax.scatter3D(xdata, ydata, zdata, c=labels, cmap=my_cmap)","output":{"0":{"data":{"text/plain":"<mpl_toolkits.mplot3d.art3d.Path3DCollection at 0x28bebac1d88>"},"exec_count":27,"output_type":"execute_result"},"1":{"data":{"image/png":"e93f3b609b11d3aa8b8fc447337d947630680e66","text/plain":"<Figure size 432x288 with 1 Axes>"},"output_type":"display_data"}},"pos":26,"type":"cell"}
{"cell_type":"code","exec_count":28,"id":"20e9a0","input":"s1 = np.array(labels - y)[:30]\ns1 = s1 - np.repeat(max(set(s1), key=list(s1).count),30)\ns2 = np.array(labels - y)[30:60]\ns2 = s2 - np.repeat(max(set(s2), key=list(s2).count),30)\ns3 = np.array(labels - y)[60:90]\ns3 = s3 - np.repeat(max(set(s3), key=list(s3).count),30)\n\nldiff = list(s1) + list(s2) + list(s3)\nldiff = list(map(lambda x: 0 if x==0 else 1,ldiff))\nldiff = np.reshape(ldiff, 90);ldiff","output":{"0":{"data":{"text/plain":"array([0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0,\n       0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0,\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0,\n       0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0,\n       1, 1])"},"exec_count":28,"output_type":"execute_result"}},"pos":27,"type":"cell"}
{"cell_type":"code","exec_count":29,"id":"4ff10f","input":"kmean = KMeans(n_clusters=3)\nkmean.fit(X)\n\nlabels = kmean.predict(X)\ninerts.append([3,kmean.inertia_])\n\n\nax = plt.axes(projection='3d')\n\n# ax.view_init(45, 70)\n\nax.scatter3D(xdata, ydata, zdata, c=ldiff, cmap=my_cmap)","output":{"0":{"data":{"text/plain":"<mpl_toolkits.mplot3d.art3d.Path3DCollection at 0x28bebb5b348>"},"exec_count":29,"output_type":"execute_result"},"1":{"data":{"image/png":"8c7c0f16e1fc830e90fd50b72eb21109cb0581b2","text/plain":"<Figure size 432x288 with 1 Axes>"},"output_type":"display_data"}},"pos":28,"type":"cell"}
{"cell_type":"code","exec_count":30,"id":"fa222d","input":"import numpy as np\nimport pandas as pd\nfrom matplotlib import pyplot as plt\nimport seaborn as sns\nfrom sklearn.preprocessing import StandardScaler\nsns.set()\n\nmy_cmap = sns.diverging_palette(600,10,center='dark', as_cmap=True)","pos":0,"type":"cell"}
{"cell_type":"code","exec_count":31,"id":"9ab0d6","input":"X1 = np.array([1,1,0,0.5,4,6,5,5.5])\nX2 = np.array([3,3.5,4,4.2,1,0.5,0,1.2])","pos":1,"type":"cell"}
{"cell_type":"code","exec_count":32,"id":"bb39f2","input":"df = pd.DataFrame({'X1': X1,\"X2\":X2})","pos":2,"type":"cell"}
{"cell_type":"code","exec_count":33,"id":"44da90","input":"df","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>X1</th>\n      <th>X2</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>0</td>\n      <td>1.0</td>\n      <td>3.0</td>\n    </tr>\n    <tr>\n      <td>1</td>\n      <td>1.0</td>\n      <td>3.5</td>\n    </tr>\n    <tr>\n      <td>2</td>\n      <td>0.0</td>\n      <td>4.0</td>\n    </tr>\n    <tr>\n      <td>3</td>\n      <td>0.5</td>\n      <td>4.2</td>\n    </tr>\n    <tr>\n      <td>4</td>\n      <td>4.0</td>\n      <td>1.0</td>\n    </tr>\n    <tr>\n      <td>5</td>\n      <td>6.0</td>\n      <td>0.5</td>\n    </tr>\n    <tr>\n      <td>6</td>\n      <td>5.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <td>7</td>\n      <td>5.5</td>\n      <td>1.2</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"    X1   X2\n0  1.0  3.0\n1  1.0  3.5\n2  0.0  4.0\n3  0.5  4.2\n4  4.0  1.0\n5  6.0  0.5\n6  5.0  0.0\n7  5.5  1.2"},"exec_count":33,"output_type":"execute_result"}},"pos":3,"type":"cell"}
{"cell_type":"code","exec_count":34,"id":"992aa4","input":"plt.scatter(X1,X2)","output":{"0":{"data":{"text/plain":"<matplotlib.collections.PathCollection at 0x28bebbfde48>"},"exec_count":34,"output_type":"execute_result"},"1":{"data":{"image/png":"a35fe86ee90509cd417c6fc88ce96e843d709497","text/plain":"<Figure size 432x288 with 1 Axes>"},"output_type":"display_data"}},"pos":4,"type":"cell"}
{"cell_type":"code","exec_count":36,"id":"d8e99c","input":"y = np.random.choice(2,8);y","output":{"0":{"data":{"text/plain":"array([0, 0, 1, 1, 1, 1, 1, 0])"},"exec_count":36,"output_type":"execute_result"}},"pos":5,"type":"cell"}
{"cell_type":"code","exec_count":37,"id":"d40527","input":"df[\"label\"] = pd.Series(y);df","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>X1</th>\n      <th>X2</th>\n      <th>label</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>0</td>\n      <td>1.0</td>\n      <td>3.0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <td>1</td>\n      <td>1.0</td>\n      <td>3.5</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <td>2</td>\n      <td>0.0</td>\n      <td>4.0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <td>3</td>\n      <td>0.5</td>\n      <td>4.2</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <td>4</td>\n      <td>4.0</td>\n      <td>1.0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <td>5</td>\n      <td>6.0</td>\n      <td>0.5</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <td>6</td>\n      <td>5.0</td>\n      <td>0.0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <td>7</td>\n      <td>5.5</td>\n      <td>1.2</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"    X1   X2  label\n0  1.0  3.0      0\n1  1.0  3.5      0\n2  0.0  4.0      1\n3  0.5  4.2      1\n4  4.0  1.0      1\n5  6.0  0.5      1\n6  5.0  0.0      1\n7  5.5  1.2      0"},"exec_count":37,"output_type":"execute_result"}},"pos":6,"type":"cell"}
{"cell_type":"code","exec_count":38,"id":"516c7f","input":"plt.scatter(x = df[\"X1\"], y = df[\"X2\"], c=df[\"label\"], cmap = my_cmap)","output":{"0":{"data":{"text/plain":"<matplotlib.collections.PathCollection at 0x28bebc649c8>"},"exec_count":38,"output_type":"execute_result"},"1":{"data":{"image/png":"9c93ff4d45331cf377aa5aa2c82a9d99411ea695","text/plain":"<Figure size 432x288 with 1 Axes>"},"output_type":"display_data"}},"pos":7,"type":"cell"}
{"cell_type":"code","exec_count":39,"id":"e57d4d","input":"c0 = np.array([0,0])\ni0 = 0\nc1 = np.array([0,0])\ni1 = 0\nfor index, row in df.iterrows():\n    if (int(row['label']) == 0):\n        c0 = c0 + [row['X1'],row['X2']]\n        i0 = i0 + 1\n    else:\n        c1 = c1 + [row['X1'],row['X2']]\n        i1 = i1 + 1\nprint(c0,c1)\nc0 = c0/i0\nc1 = c1/i1","output":{"0":{"name":"stdout","output_type":"stream","text":"[7.5 7.7] [15.5  9.7]\n"}},"pos":8,"type":"cell"}
{"cell_type":"code","exec_count":40,"id":"0adf50","input":"plt.scatter(x = df[\"X1\"], y = df[\"X2\"], c=df[\"label\"],cmap=my_cmap)\nplt.scatter(c0[0],c0[1],c='green')\nplt.scatter(c1[0],c1[1],c='orange')","output":{"0":{"data":{"text/plain":"<matplotlib.collections.PathCollection at 0x28bebcd5188>"},"exec_count":40,"output_type":"execute_result"},"1":{"data":{"image/png":"329652b3ca8fcf2a9a7f3e3d777ddf725491baab","text/plain":"<Figure size 432x288 with 1 Axes>"},"output_type":"display_data"}},"pos":9,"type":"cell"}
{"cell_type":"code","exec_count":41,"id":"ebf50d","input":"new_y = y","pos":10,"type":"cell"}
{"cell_type":"code","exec_count":42,"id":"4e4d07","input":"old_y = new_y\nnew_y = np.array([])\nfor index, row in df.iterrows():\n    dist0 = np.linalg.norm(np.array([row['X1'],row['X2']])-c0)\n    dist1 = np.linalg.norm(np.array([row['X1'],row['X2']])-c1)\n    if dist0 <= dist1:\n        new_y = np.append(new_y,0)\n    else:\n        new_y = np.append(new_y,1)\nnew_y","output":{"0":{"data":{"text/plain":"array([0., 0., 0., 0., 1., 1., 1., 1.])"},"exec_count":42,"output_type":"execute_result"}},"pos":11,"type":"cell"}
{"cell_type":"code","exec_count":43,"id":"8758f8","input":"df['label'] = new_y","pos":12,"type":"cell"}
{"cell_type":"code","exec_count":44,"id":"a3c103","input":"plt.scatter(x = df[\"X1\"], y = df[\"X2\"], c=df[\"label\"], cmap = my_cmap)\nplt.scatter(c0[0],c0[1],c='green')\nplt.scatter(c1[0],c1[1],c='orange')","output":{"0":{"data":{"text/plain":"<matplotlib.collections.PathCollection at 0x28bebd3f908>"},"exec_count":44,"output_type":"execute_result"},"1":{"data":{"image/png":"aea39232936b3ca77412bb2509355ca2e91447c0","text/plain":"<Figure size 432x288 with 1 Axes>"},"output_type":"display_data"}},"pos":13,"type":"cell"}
{"cell_type":"code","id":"97df20","input":"","pos":29,"type":"cell"}
{"cell_type":"code","id":"a6233d","input":"","pos":30,"type":"cell"}
{"id":0,"time":1580400574331,"type":"user"}
{"last_load":1579999940769,"type":"file"}